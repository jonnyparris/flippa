{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../App.svelte",
    "../flipCard.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { onMount } from \"svelte\";\n  import FlipCard from \"./components/flipCard.svelte\";\n\n  onMount(async () => {\n    initGame();\n  });\n\n  const flipKeys = [\"apples\", \"oranges\", \"melons\"];\n  let flippedKey = \"\";\n  let flippedVariant = \"\";\n  let cards = [];\n  let boardState = [];\n  let matched = [];\n\n  $: {\n    boardState = boardState.map(card => {\n      card.flipped =\n        matched.includes(card.flipKey) ||\n        (flippedKey === card.flipKey && flippedVariant === card.variant);\n      return card;\n    });\n  }\n\n  function initGame() {\n    console.log(\"Initialising flippa game\");\n    cards = flipKeys.reduce((acc, flipKey) => {\n      acc.push({\n        flipKey,\n        variant: \"A\"\n      });\n      acc.push({\n        flipKey,\n        variant: \"B\"\n      });\n      return acc;\n    }, []);\n    shuffleArray(cards);\n    boardState = cards;\n  }\n\n  function shuffleArray(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n\n  function handleFlip({ detail }) {\n    const { flipKey, variant } = detail;\n    if (flippedKey === \"\") {\n      flippedKey = flipKey;\n      flippedVariant = variant;\n    } else {\n      if (flippedKey === flipKey && flippedVariant !== variant) {\n        console.log(\"Match!\", flipKey);\n        matched.push(flipKey);\n        if (matched.length === cards.length) {\n          console.log(\"All matched! Resetting game...\");\n          matched = [];\n        }\n      } else {\n        console.log(\"No match\");\n      }\n      flippedKey = \"\";\n      flippedVariant = \"\";\n    }\n  }\n</script>\n\n<style>\n  main {\n    text-align: center;\n    padding: 1em;\n    max-width: 240px;\n    margin: 0 auto;\n  }\n\n  h1 {\n    color: #ff3e00;\n    text-transform: uppercase;\n    font-size: 4em;\n    font-weight: 100;\n  }\n\n  @media (min-width: 640px) {\n    main {\n      max-width: none;\n    }\n  }\n</style>\n\n<main>\n  <h1>Flippa</h1>\n  {#each boardState as card}\n    <FlipCard\n      flipKey={card.flipKey}\n      variant={card.variant}\n      flipped={card.flipped}\n      on:flip={handleFlip} />\n  {/each}\n</main>\n",
    "<script>\n  import { createEventDispatcher } from \"svelte\";\n\n  const dispatch = createEventDispatcher();\n\n  export let flipKey;\n  export let variant;\n  export let flipped;\n\n  function handleClick() {\n    if (!flipped) dispatch(\"flip\", { flipKey, variant });\n  }\n</script>\n\n<style>\n  .card {\n    border: 1px solid #000;\n    border-radius: 10px;\n    padding: 5px;\n    margin-top: 5px;\n    height: 30px;\n    width: 70px;\n  }\n</style>\n\n<div class=\"card\" on:click={handleClick}>{flipKey} - {flipped}</div>\n"
  ],
  "names": [],
  "mappings": "AAuEE,IAAI,eAAC,CAAC,AACJ,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,GAAG,CACZ,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,AAChB,CAAC,AAED,EAAE,eAAC,CAAC,AACF,KAAK,CAAE,OAAO,CACd,cAAc,CAAE,SAAS,CACzB,SAAS,CAAE,GAAG,CACd,WAAW,CAAE,GAAG,AAClB,CAAC,AAED,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,IAAI,eAAC,CAAC,AACJ,SAAS,CAAE,IAAI,AACjB,CAAC,AACH,CAAC;AC1ED,KAAK,eAAC,CAAC,AACL,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CACtB,aAAa,CAAE,IAAI,CACnB,OAAO,CAAE,GAAG,CACZ,UAAU,CAAE,GAAG,CACf,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,AACb,CAAC"
}